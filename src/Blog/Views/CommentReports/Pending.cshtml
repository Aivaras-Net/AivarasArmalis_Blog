@model IEnumerable<Blog.Models.CommentReport>
@{
    ViewData["Title"] = "Pending Comment Reports";
}

<div class="container py-5">
    <h1>Pending Comment Reports</h1>

    <ul class="nav nav-tabs mb-4">
        <li class="nav-item">
            <a class="nav-link" asp-action="Index">All Reports</a>
        </li>
        <li class="nav-item">
            <a class="nav-link active" aria-current="page" asp-action="Pending">Pending (@Model.Count())</a>
        </li>
    </ul>

    @if (!Model.Any())
    {
        <div class="alert alert-success">
            <i class="bi bi-check-circle me-2"></i>
            Great! There are no pending reports to review.
        </div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table table-striped table-hover">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Reporter</th>
                        <th>Reported Comment</th>
                        <th>Reason</th>
                        <th>Date</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var report in Model)
                    {
                        <tr class="table-warning">
                            <td>@report.Id</td>
                            <td>
                                @if (report.Reporter != null)
                                {
                                    @($"{report.Reporter.FirstName} {report.Reporter.LastName}")
                                }
                                else
                                {
                                    <span class="text-muted">Unknown</span>
                                }
                            </td>
                            <td>
                                @if (report.Comment != null)
                                {
                                    <span class="fw-medium">By:
                                        @if (report.Comment.Author != null)
                                        {
                                            @($"{report.Comment.Author.FirstName} {report.Comment.Author.LastName}")
                                        }
                                        else
                                        {
                                            <span class="text-muted">Unknown</span>
                                        }
                                    </span>
                                    <div class="text-truncate small" style="max-width: 250px;">
                                        @report.Comment.Content
                                    </div>
                                    <a href="@Url.Action("Details", "Articles", new { id = report.Comment.ArticleId })"
                                        class="small" target="_blank">View in article <i class="bi bi-box-arrow-up-right"></i></a>
                                }
                                else
                                {
                                    <span class="text-muted">Comment not found</span>
                                }
                            </td>
                            <td>
                                <div style="max-width: 250px;">@report.Reason</div>
                            </td>
                            <td>@report.CreatedAt.ToString("MMM d, yyyy h:mm tt")</td>
                            <td>
                                <div class="btn-group">
                                    <a asp-action="Details" asp-route-id="@report.Id" class="btn btn-sm btn-outline-primary">
                                        <i class="bi bi-eye"></i> Review
                                    </a>

                                    @if (report.Comment != null && !report.Comment.IsBlocked)
                                    {
                                        <button type="button" class="btn btn-sm btn-outline-danger block-button"
                                            data-comment-id="@report.Comment.Id"
                                            data-comment-text="@(report.Comment.Content.Length > 100 ? report.Comment.Content.Substring(0, 100) + "..." : report.Comment.Content)"
                                            data-author-name="@(report.Comment?.Author != null ? $"{report.Comment.Author.FirstName} {report.Comment.Author.LastName}" : "Unknown")">
                                            <i class="bi bi-ban"></i> Block
                                        </button>

                                        <button type="button" class="btn btn-sm btn-outline-secondary review-button"
                                            data-report-id="@report.Id" data-status="Rejected">
                                            <i class="bi bi-x-circle"></i> Reject
                                        </button>
                                    }
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

<partial name="_BlockCommentModalPartial" />

<div class="modal fade" id="reviewReportModal" tabindex="-1" aria-labelledby="reviewReportModalLabel"
    aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="reviewReportModalLabel">Review Report</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form asp-action="Review" method="post" id="reviewReportForm">
                <div class="modal-body">
                    <input type="hidden" name="id" id="reviewReportId" value="" />
                    <input type="hidden" name="status" id="reviewReportStatus" value="" />

                    <div class="mb-3">
                        <label for="notes" class="form-label">Review Notes (Optional):</label>
                        <textarea name="notes" id="reviewReportNotes" class="form-control" rows="3"
                            placeholder="Add any notes about this review..."></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Submit Review</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $(document).on('click', '.review-button', function () {
                var reportId = $(this).data('report-id');
                var status = $(this).data('status');

                $('#reviewReportId').val(reportId);
                $('#reviewReportStatus').val(status);
                $('#reviewReportNotes').val('');

                $('#reviewReportModalLabel').text(status === 'Rejected' ? 'Reject Report' : 'Review Report');

                var reviewModal = new bootstrap.Modal(document.getElementById('reviewReportModal'));
                reviewModal.show();
            });

            $(document).on('click', '.block-button', function () {
                var commentId = $(this).data('comment-id');
                var commentText = $(this).data('comment-text');
                var authorName = $(this).data('author-name');

                $('#blockCommentId').val(commentId);
                $('.comment-author-name').text(authorName);
                $('.comment-text').text(commentText);

                var blockModal = new bootstrap.Modal(document.getElementById('blockCommentModal'));
                blockModal.show();
            });

            $('#reviewReportForm').on('submit', function (e) {
                e.preventDefault();

                var form = $(this);

                $.ajax({
                    url: form.attr('action'),
                    type: 'POST',
                    data: form.serialize(),
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    success: function (response) {
                        $('#reviewReportModal').modal('hide');
                        location.reload();
                    },
                    error: function (xhr, status, error) {
                        var errorMessage = 'An error occurred. Please try again.';

                        if (xhr && xhr.responseJSON && xhr.responseJSON.message) {
                            errorMessage = xhr.responseJSON.message;
                        } else if (xhr && xhr.responseText) {
                            errorMessage = xhr.responseText;
                        } else if (error) {
                            errorMessage = error;
                        }

                        var errorDiv = $('<div class="alert alert-danger"></div>').text(errorMessage);
                        form.find('.modal-body').prepend(errorDiv);

                        setTimeout(function () {
                            errorDiv.fadeOut(function () {
                                $(this).remove();
                            });
                        }, 3000);
                    }
                });
            });
        });
    </script>
}